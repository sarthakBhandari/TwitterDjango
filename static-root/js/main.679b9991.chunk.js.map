{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","profiles/lookup.js","profiles/utils.js","profiles/badge.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/components.js","serviceWorker.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","message","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","UserLink","handleUserLink","children","UserPicture","user","hideLink","UserDisplay","includeFullName","nameDisplay","first_name","last_name","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","followers_count","following_count","bio","handleFollowToggle","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","Fragment","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","setNextUrl","final","newTweets","concat","results","next","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","handleLoadNext","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","Boolean","hostname","rootEl","getElementById","createElement","ReactDOM","render","dataset","querySelectorAll","forEach","container","FeedEl","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.679b9991.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data);\n  }\n  const xhr = new XMLHttpRequest();\n  const url = `http://localhost:8000/api${endpoint}`;\n  xhr.responseType = \"json\";\n  const csrftoken = getCookie(\"csrftoken\");\n  xhr.open(method, url);\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n  if (csrftoken) {\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n  }\n\n  xhr.onload = function () {\n    if (xhr.status === 403) {\n      const detail = xhr.response.detail;\n      if (detail === \"Authentication credentials were not provided.\") {\n        if (window.location.href.indexOf(\"login\") === -1) {\n          //dont wanna ridirect when login already exists\n          window.location.href = \"/login?showLoginRequired=true\";\n        }\n      }\n    }\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({ message: \"The request was an error\" }, 400);\n  };\n  xhr.send(jsonData);\n}\n","import { backendLookup } from \"../lookup\";\n\nexport function apiTweetCreate(newTweet, callback) {\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n  const data = { id: tweetId, action: action };\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data);\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n  let endpoint = \"/tweets/feed/\";\n  if (nextUrl !== undefined && nextUrl !== null) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n  }\n  backendLookup(\"GET\", endpoint, callback);\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n  let endpoint = \"/tweets/\";\n  if (username) {\n    endpoint = `/tweets/?username=${username}`;\n  }\n  if (nextUrl !== undefined && nextUrl !== null) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n  }\n  backendLookup(\"GET\", endpoint, callback);\n}\n","import React from 'react'\n\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleActionBackendEvent = (response, status) =>{\n      console.log(response, status)\n      if ((status === 200 || status === 201) && didPerformAction){\n        didPerformAction(response, status)\n      }\n    }\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n        \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  }","import React from 'react'\nimport {apiTweetCreate} from './lookup'\n\n\nexport function TweetCreate(props){\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n    const handleBackendUpdate = (response, status) =>{\n      if (status === 201){\n        didTweet(response)\n      } else {\n        console.log(response)\n        alert(\"An error occured please try again\")\n      }\n    }\n\n    const handleSubmit = (event) => {\n      event.preventDefault()\n      const newVal = textAreaRef.current.value\n      // backend api request\n      apiTweetCreate(newVal, handleBackendUpdate)\n      textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n          <form onSubmit={handleSubmit}>\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n            </textarea>\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n        </form>\n  </div>\n}","import React from \"react\";\r\n\r\nconst UserLink = (props) => {\r\n  const { username } = props;\r\n  const handleUserLink = (e) => {\r\n    e.preventDefault();\r\n    window.location.href = `/profiles/${username}`;\r\n  };\r\n  return (\r\n    <span className=\"pointer\" onClick={(e) => handleUserLink(e)}>\r\n      {props.children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const UserPicture = (props) => {\r\n  const { user, hideLink } = props;\r\n  return (\r\n    <>\r\n      {hideLink ? (\r\n        <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n          {user.username[0]}\r\n        </span>\r\n      ) : (\r\n        <UserLink username={user.username}>\r\n          <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n            {user.username[0]}\r\n          </span>\r\n        </UserLink>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport const UserDisplay = (props) => {\r\n  const { user, includeFullName, hideLink } = props;\r\n  const nameDisplay = includeFullName\r\n    ? `${user.first_name} ${user.last_name} `\r\n    : null;\r\n\r\n  return (\r\n    <>\r\n      {nameDisplay}\r\n      {hideLink ? (\r\n        `@${user.username}`\r\n      ) : (\r\n        <UserLink username={user.username}>\r\n          <span>@{user.username}</span>\r\n        </UserLink>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n  let endpoint = `/profiles/${username}/`;\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport const apiProfileFollowToggle = (username, action, callback) => {\r\n  let endpoint = `/profiles/${username}/follow`;\r\n  const data = { action: `${action && action}`.toLowerCase() };\r\n  backendLookup(\"POST\", endpoint, callback, data);\r\n};\r\n","import numeral from \"numeral\";\r\n\r\nexport const DisplayCount = (props) => {\r\n  return (\r\n    <span className={props.className}>\r\n      {numeral(props.children).format(\"0a\")}\r\n    </span>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { apiProfileDetail } from \"./lookup\";\r\nimport { UserDisplay, UserPicture } from \"./components\";\r\nimport { apiProfileFollowToggle } from \"./lookup\";\r\nimport { DisplayCount } from \"./utils\";\r\n\r\nconst ProfileBadge = (props) => {\r\n  const { user, didFollowToggle, profileLoading } = props;\r\n  let currentVerb = user && user.is_following ? \"Unfollow\" : \"Follow\";\r\n  currentVerb = profileLoading ? \"Loading...\" : currentVerb;\r\n\r\n  const handleFollowToggle = (e) => {\r\n    e.preventDefault();\r\n    if (didFollowToggle && !profileLoading) {\r\n      didFollowToggle(currentVerb);\r\n    }\r\n  };\r\n  return user ? (\r\n    <div className=\"p-2\">\r\n      <div className=\"mb-2\">\r\n        <UserPicture user={user} hideLink={true} />\r\n      </div>\r\n      <p>\r\n        <UserDisplay user={user} includeFullName={true} hideLink={true} />\r\n      </p>\r\n      <p>\r\n        <DisplayCount>{user.followers_count}</DisplayCount>\r\n        {user.followers_count === 1 ? \" follower\" : \" followers\"}\r\n      </p>\r\n      <p>\r\n        <DisplayCount>{user.following_count}</DisplayCount> following\r\n      </p>\r\n      <p>{user.location}</p>\r\n      <p>{user.bio}</p>\r\n\r\n      <button\r\n        onClick={(e) => handleFollowToggle(e)}\r\n        className=\"btn btn-primary\"\r\n      >\r\n        {currentVerb}\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n  const { username } = props;\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [profile, setProfile] = useState(null);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setProfile(response);\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiProfileDetail(username, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }, [username, didLookup, setDidLookup]);\r\n\r\n  const handleNewFollow = (actionVerb) => {\r\n    setProfileLoading(true);\r\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n      // console.log(response, status);\r\n      if (status === 200) {\r\n        setProfile(response);\r\n        // apiProfileDetail(username, handleBackendLookup) // does the same thing but two lookups\r\n      }\r\n      setProfileLoading(false);\r\n    });\r\n  };\r\n\r\n  return profile === null ? null : (\r\n    <ProfileBadge\r\n      user={profile}\r\n      didFollowToggle={handleNewFollow}\r\n      profileLoading={profileLoading}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { ActionBtn } from \"./buttons\";\nimport { UserPicture, UserDisplay } from \"../profiles\";\n\nexport function ParentTweet(props) {\n  const { tweet } = props;\n  return tweet.parent ? (\n    <Tweet\n      isRetweet\n      retweeter={props.retweeter}\n      hideActions\n      className={\" \"}\n      tweet={tweet.parent}\n    />\n  ) : null;\n}\nexport function Tweet(props) {\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\n  const [actionTweet, setActionTweet] = useState(\n    props.tweet ? props.tweet : null\n  );\n  let className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\n  className =\n    isRetweet === true ? `${className} p-2 border rounded` : className;\n  const path = window.location.pathname;\n  const match = path.match(/(?<tweetid>\\d+)/);\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = (event) => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return (\n    <div className={className}>\n      {isRetweet === true && (\n        <div className=\"mb-2\">\n          <span className=\"small text-muted\">\n            Retweet via {<UserDisplay user={retweeter} />}\n          </span>\n        </div>\n      )}\n      <div className=\"d-flex\">\n        <div className=\"\">\n          <UserPicture user={tweet.user} />\n        </div>\n        <div className=\"col-11\">\n          <div>\n            <p>{<UserDisplay user={tweet.user} includeFullName={true} />}</p>\n            <p>{tweet.content}</p>\n\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\n          </div>\n          <div className=\"btn btn-group px-0\">\n            {actionTweet && hideActions !== true && (\n              <React.Fragment>\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"like\", display: \"Likes\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\n                />\n              </React.Fragment>\n            )}\n            {isDetail === true ? null : (\n              <button\n                className=\"btn btn-outline-primary btn-sm\"\n                onClick={handleLink}\n              >\n                View\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { apiTweetList } from \"./lookup\";\n\nimport { Tweet } from \"./detail\";\n\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  const [nextUrl, setNextUrl] = useState(null);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response.results);\n          setNextUrl(response.next);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = (newTweet) => {\n    const updateTweetsInit = [...tweetsInit];\n    updateTweetsInit.unshift(newTweet);\n    setTweetsInit(updateTweetsInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(tweets);\n    setTweets(updateFinalTweets);\n  };\n\n  const handleLoadNext = (e) => {\n    e.preventDefault();\n    apiTweetList(\n      props.username,\n      (response, status) => {\n        if (status === 200) {\n          const newTweets = [...tweets].concat(response.results);\n          setTweetsInit(newTweets);\n          setTweets(newTweets);\n          setNextUrl(response.next);\n        } else {\n          alert(\"There was an error\");\n        }\n      },\n      nextUrl\n    );\n  };\n\n  return (\n    <>\n      {tweets.map((item, index) => {\n        return (\n          <Tweet\n            tweet={item}\n            didRetweet={handleDidRetweet}\n            className=\"my-5 py-5 border bg-white text-dark\"\n            key={`${index}-{item.id}`}\n          />\n        );\n      })}\n      {nextUrl && (\n        <button\n          onClick={(e) => handleLoadNext(e)}\n          className=\"btn btn-outline-primary\"\n        >\n          Load Next\n        </button>\n      )}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiTweetFeed } from \"./lookup\";\r\n\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function FeedList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  useEffect(() => {\r\n    const final = [...props.newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweets, tweetsInit]);\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          console.log(response);\r\n          setTweetsInit(response.results);\r\n          setNextUrl(response.next);\r\n          setTweetsDidSet(true);\r\n        }\r\n      };\r\n      apiTweetFeed(handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(tweets);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n\r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    apiTweetFeed((response, status) => {\r\n      if (status === 200) {\r\n        const newTweets = [...tweets].concat(response.results);\r\n        setTweetsInit(newTweets);\r\n        setTweets(newTweets);\r\n        setNextUrl(response.next);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {tweets.map((item, index) => {\r\n        return (\r\n          <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-{item.id}`}\r\n          />\r\n        );\r\n      })}\r\n      {nextUrl && (\r\n        <button\r\n          onClick={(e) => handleLoadNext(e)}\r\n          className=\"btn btn-outline-primary\"\r\n        >\r\n          Load Next\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\n\nimport { TweetCreate } from \"./create\";\nimport { Tweet } from \"./detail\";\nimport { apiTweetDetail } from \"./lookup\";\nimport { TweetsList } from \"./list\";\nimport { FeedList } from \"./feed\";\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n  return (\n    <div className={props.className}>\n      {canTweet === true && (\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\n      )}\n      <FeedList newTweets={newTweets} {...props} />\n    </div>\n  );\n}\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n  return (\n    <div className={props.className}>\n      {canTweet === true && (\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\n      )}\n      <TweetsList newTweets={newTweets} {...props} />\n    </div>\n  );\n}\n\nexport function TweetDetailComponent(props) {\n  const { tweetId } = props;\n  const [didLookup, setDidLookup] = useState(false);\n  const [tweet, setTweet] = useState(null);\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response);\n    } else {\n      alert(\"There was an error finding your tweet.\");\n    }\n  };\n  useEffect(() => {\n    if (didLookup === false) {\n      apiTweetDetail(tweetId, handleBackendLookup);\n      setDidLookup(true);\n    }\n  }, [tweetId, didLookup, setDidLookup]);\n\n  return tweet === null ? null : (\n    <Tweet tweet={tweet} className={props.className} />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { TweetsComponent, TweetDetailComponent, FeedComponent } from \"./tweets\";\nimport { ProfileBadgeComponent } from \"./profiles\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootEl = document.getElementById(\"root\");\nconst e = React.createElement;\nif (rootEl) {\n  ReactDOM.render(e(TweetsComponent, rootEl.dataset), rootEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\n\ntweetDetailElements.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\nconst FeedEl = document.getElementById(\"tweetme-2-feed\");\nif (FeedEl) {\n  ReactDOM.render(e(FeedComponent, FeedEl.dataset), FeedEl);\n}\n\nconst profileBadgeElements = document.querySelectorAll(\n  \".tweetme-2-profile-badge\"\n);\n\nprofileBadgeElements.forEach((container) => {\n  ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}