{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/search.js","profiles/lookup.js","profiles/components.js","profiles/utils.js","profiles/badge.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/components.js","serviceWorker.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","message","send","apiTweetDelete","id","apiTweetList","username","nextUrl","undefined","replace","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","placeholder","SearchProfile","newProfile","handleSubmit","apiProfileFeed","UserLink","handleUserLink","children","UserPicture","user","hideLink","UserDisplay","includeFullName","nameDisplay","first_name","last_name","SearchComponent","useState","setUsername","success","setSuccess","useEffect","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","followers_count","following_count","bio","handleFollowToggle","ProfileBadgeComponent","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","didDelete","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","Fragment","TweetsList","fixingRetweet","fixingDelete","newTweets","setNewTweets","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","setNextUrl","final","concat","results","next","handleDidRetweet","newTweet","tempNewTweets","unshift","handleDelete","tempTweetsInit","filter","tempTweets","map","item","index","handleLoadNext","FeedList","userFound","setUserFound","TweetsComponent","canTweet","retweet","TweetDetailComponent","setTweet","apiTweetDetail","Boolean","hostname","createElement","rootEl","getElementById","ReactDOM","render","dataset","querySelectorAll","forEach","container","feedEl","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8MAAe,I,MCgBR,SAASA,EAAcC,EAAQC,EAAUC,EAAUC,GACxD,IAAIC,EACAD,IACFC,EAAWC,KAAKC,UAAUH,IAE5B,IAAMI,EAAM,IAAIC,eACVC,EAAG,mCAA+BR,GACxCM,EAAIG,aAAe,OACnB,IAAMC,EAxBR,SAAmBC,GACjB,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE9B,IADA,IAAIC,EAAUF,SAASC,OAAOE,MAAM,KAC3BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAIH,EAASC,EAAQE,GAAGE,OAExB,GAAIL,EAAOM,UAAU,EAAGT,EAAKO,OAAS,KAAOP,EAAO,IAAK,CACvDC,EAAcS,mBAAmBP,EAAOM,UAAUT,EAAKO,OAAS,IAChE,OAIN,OAAON,EAWWU,CAAU,aAC5BhB,EAAIiB,KAAKxB,EAAQS,GACjBF,EAAIkB,iBAAiB,eAAgB,oBAEjCd,IAEFJ,EAAIkB,iBAAiB,mBAAoB,kBACzClB,EAAIkB,iBAAiB,cAAed,IAGtCJ,EAAImB,OAAS,WACQ,MAAfnB,EAAIoB,SAES,kDADApB,EAAIqB,SAASC,SAEqB,IAA3CC,OAAOC,SAASC,KAAKC,QAAQ,WAE/BH,OAAOC,SAASC,KAAO,kCAI7B9B,EAASK,EAAIqB,SAAUrB,EAAIoB,SAE7BpB,EAAI2B,QAAU,SAAUC,GACtBC,QAAQC,IAAIF,GACZjC,EAAS,CAAEoC,QAAS,4BAA8B,MAEpD/B,EAAIgC,KAAKnC,GC3BJ,SAASoC,EAAeC,EAAIvC,GAEjCH,EAAc,SADF,kBAAc0C,EAAd,YACsBvC,GAG7B,SAASwC,EAAaC,EAAUzC,EAAU0C,GAC/C,IAAI3C,EAAW,WACX0C,IACF1C,EAAQ,4BAAwB0C,SAElBE,IAAZD,GAAqC,OAAZA,IAC3B3C,EAAW2C,EAAQE,QAAQ,4BAA6B,KAE1D/C,EAAc,MAAOE,EAAUC,G,WChC1B,SAAS6C,EAAUC,GACtB,IAAOC,EAAmCD,EAAnCC,MAAOC,EAA4BF,EAA5BE,OAAQC,EAAoBH,EAApBG,iBAChBC,EAAQH,EAAMG,MAAQH,EAAMG,MAAQ,EACpCC,EAAYL,EAAMK,UAAYL,EAAMK,UAAY,yBAChDC,EAAgBJ,EAAOK,QAAUL,EAAOK,QAAU,SAElDC,EAA2B,SAAC5B,EAAUD,GAC1CS,QAAQC,IAAIT,EAAUD,GACN,MAAXA,GAA6B,MAAXA,IAAmBwB,GACxCA,EAAiBvB,EAAUD,IAQzB4B,EAA0B,SAAhBL,EAAOO,KAAP,UAA4BL,EAA5B,YAAqCE,GAAkBA,EACvE,OAAO,wBAAQD,UAAWA,EAAWK,QANjB,SAACC,GACnBA,EAAMC,iBDXL,SAAwBC,EAASX,EAAQhD,GAE9CH,EAAc,OAAQ,kBAAmBG,EAD5B,CAAEuC,GAAIoB,EAASX,OAAQA,ICWhCY,CAAeb,EAAMR,GAAIS,EAAOO,KAAMD,IAIjC,SAAqDD,I,yBCnBzD,SAASQ,EAAYf,GAC1B,IAAMgB,EAAcC,IAAMC,YAClBC,EAAanB,EAAbmB,SACFC,EAAsB,SAACxC,EAAUD,GACtB,MAAXA,EACFwC,EAASvC,IAETQ,QAAQC,IAAIT,GACZyC,MAAM,uCAWV,OACE,qBAAKhB,UAAWL,EAAMK,UAAtB,SACE,uBAAMiB,SATW,SAACX,GACpBA,EAAMC,iBACN,IAAMW,EAASP,EAAYQ,QAAQC,MFdrC1E,EAAc,OAAQ,kBEgBGqE,EFhB0B,CAAEM,QEgBpCH,IACfP,EAAYQ,QAAQC,MAAQ,IAI1B,UACE,0BACEE,IAAKX,EACLY,UAAU,EACVC,YAAY,0BACZxB,UAAU,eACVzC,KAAK,UAEP,wBAAQ6C,KAAK,SAASJ,UAAU,uBAAhC,wB,YC9BD,SAASyB,EAAc9B,GAC5B,IAAMgB,EAAcC,IAAMC,YAClBa,EAAe/B,EAAf+B,WAQR,OACE,qBAAK1B,UAAWL,EAAMK,UAAtB,SACE,uBAAMiB,SAAU,SAACnC,GAAD,OARC,SAACwB,GACpBA,EAAMC,iBACN,IAAMW,EAASP,EAAYQ,QAAQC,MACnCM,EAAWR,GACXP,EAAYQ,QAAQC,MAAQ,GAIHO,CAAa7C,IAAIkB,UAAU,gBAAlD,UACE,0BACEsB,IAAKX,EACLY,UAAU,EACVvB,UAAU,eACVzC,KAAK,QACLiE,YAAY,4BAEd,wBAAQpB,KAAK,SAASJ,UAAU,uBAAhC,yBCTD,SAAS4B,EAAetC,EAAUzC,EAAU0C,GACjD,IAAI3C,EAAQ,oBAAgB0C,EAAhB,eACIE,IAAZD,GAAqC,OAAZA,IAC3B3C,EAAW2C,EAAQE,QAAQ,4BAA6B,KAE1D/C,EAAc,MAAOE,EAAUC,GCdjC,IAAMgF,EAAW,SAAClC,GAChB,IAAQL,EAAaK,EAAbL,SAKR,OACE,sBAAMU,UAAU,UAAUK,QAAS,SAACvB,GAAD,OALd,SAACA,GACtBA,EAAEyB,iBACF9B,OAAOC,SAASC,KAAhB,oBAAoCW,GAGMwC,CAAehD,IAAzD,SACGa,EAAMoC,YAKAC,EAAc,SAACrC,GAC1B,IAAQsC,EAAmBtC,EAAnBsC,KAAMC,EAAavC,EAAbuC,SACd,OACE,mCACGA,EACC,sBAAMlC,UAAU,mDAAhB,SACGiC,EAAK3C,SAAS,KAGjB,cAAC,EAAD,CAAUA,SAAU2C,EAAK3C,SAAzB,SACE,sBAAMU,UAAU,mDAAhB,SACGiC,EAAK3C,SAAS,UAOd6C,EAAc,SAACxC,GAC1B,IAAQsC,EAAoCtC,EAApCsC,KAAMG,EAA8BzC,EAA9ByC,gBAAiBF,EAAavC,EAAbuC,SACzBG,EAAcD,EAAe,UAC5BH,EAAKK,WADuB,YACTL,EAAKM,UADI,KAE/B,KAEJ,OACE,qCACGF,EACAH,EAAQ,WACHD,EAAK3C,UAET,cAAC,EAAD,CAAUA,SAAU2C,EAAK3C,SAAzB,SACE,qCAAQ2C,EAAK3C,kBA0FVkD,EAAkB,SAAC7C,GAC9B,MAAgC8C,mBAAS,MAAzC,mBAAOnD,EAAP,KAAiBoD,EAAjB,KACA,EAA8BD,mBAAS,MAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAkBA,OAbAC,qBAAU,WACR,GAAIvD,EAAU,CASZsC,EAAetC,GARe,SAACf,EAAUD,GACxB,MAAXA,GACFsE,GAAW,GACXnE,OAAOC,SAASC,KAAhB,oBAAoCW,IAChB,MAAXhB,GACTsE,GAAW,SAKhB,CAACtD,IAEF,qCACE,cAACmC,EAAD,CAAeC,WAlBM,SAACnE,GACxBmF,EAAYnF,OAkBG,IAAZoF,EACC,8BACE,oBAAI3C,UAAU,yBAAd,4CAIA,S,gBCrKG8C,EAAe,SAACnD,GAC3B,OACE,sBAAMK,UAAWL,EAAMK,UAAvB,SACG+C,IAAQpD,EAAMoC,UAAUiB,OAAO,SCEhCC,EAAe,SAACtD,GACpB,IAAQsC,EAA0CtC,EAA1CsC,KAAMiB,EAAoCvD,EAApCuD,gBAAiBC,EAAmBxD,EAAnBwD,eAC3BC,EAAcnB,GAAQA,EAAKoB,aAAe,WAAa,SAC3DD,EAAcD,EAAiB,aAAeC,EAQ9C,OAAOnB,EACL,sBAAKjC,UAAU,MAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,CAAaiC,KAAMA,EAAMC,UAAU,MAErC,4BACE,cAAC,EAAD,CAAaD,KAAMA,EAAMG,iBAAiB,EAAMF,UAAU,MAE5D,8BACE,cAAC,EAAD,UAAeD,EAAKqB,kBACM,IAAzBrB,EAAKqB,gBAAwB,YAAc,gBAE9C,8BACE,cAAC,EAAD,UAAerB,EAAKsB,kBADtB,gBAGA,4BAAItB,EAAKvD,WACT,4BAAIuD,EAAKuB,MAET,wBACEnD,QAAS,SAACvB,GAAD,OAzBY,SAACA,GAC1BA,EAAEyB,iBACE2C,IAAoBC,GACtBD,EAAgBE,GAsBEK,CAAmB3E,IACnCkB,UAAU,kBAFZ,SAIGoD,OAGH,MAGC,SAASM,EAAsB/D,GACpC,IAAQL,EAAaK,EAAbL,SACR,EAAkCmD,oBAAS,GAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAA8BnB,mBAAS,MAAvC,mBAAOoB,EAAP,KAAgBC,EAAhB,KACA,EAA4CrB,oBAAS,GAArD,mBAAOU,EAAP,KAAuBY,EAAvB,KAEMC,EAAsB,SAACzF,EAAUD,GACtB,MAAXA,EACFwF,EAAWvF,GAEXyC,MAAM,2CAGV6B,qBAAU,YACU,IAAdc,KH1DD,SAA0BrE,EAAUzC,GAEzCH,EAAc,MADF,oBAAgB4C,EAAhB,KACmBzC,GGyD3BoH,CAAiB3E,EAAU0E,GAC3BJ,GAAa,MAEd,CAACtE,EAAUqE,EAAWC,IAczB,OAAmB,OAAZC,EAAmB,KACxB,cAAC,EAAD,CACE5B,KAAM4B,EACNX,gBAfoB,SAACgB,GACvBH,GAAkB,GH5DgB,SAACzE,EAAUO,EAAQhD,GAGvDH,EAAc,OAFF,oBAAgB4C,EAAhB,WAEoBzC,EADnB,CAAEgD,OAAQ,UAAGA,GAAUA,GAASsE,gBG2D3CC,CAAuB9E,EAAU4E,GAAY,SAAC3F,EAAUD,GAEvC,MAAXA,GACFwF,EAAWvF,GAGbwF,GAAkB,OAQlBZ,eAAgBA,IC9Ef,SAASkB,EAAY1E,GAC1B,IAAQC,EAAUD,EAAVC,MACR,OAAOA,EAAM0E,OACX,cAACC,EAAD,CACEC,WAAS,EACTC,UAAW9E,EAAM8E,UACjBC,aAAW,EACX1E,UAAW,IACXJ,MAAOA,EAAM0E,SAEb,KAEC,SAASC,EAAM5E,GACpB,IAAQC,EACND,EADMC,MAAO+E,EACbhF,EADagF,WAAYD,EACzB/E,EADyB+E,YAAaF,EACtC7E,EADsC6E,UAAWC,EACjD9E,EADiD8E,UAAWG,EAC5DjF,EAD4DiF,UAE9D,EAAsCnC,mBACpC9C,EAAMC,MAAQD,EAAMC,MAAQ,MAD9B,mBAAOiF,EAAP,KAAoBC,EAApB,KAGI9E,EAAYL,EAAMK,UAAYL,EAAMK,UAAY,0BACpDA,GACgB,IAAdwE,EAAA,UAAwBxE,EAAxB,uBAAyDA,EAC3D,IACM+E,EADOtG,OAAOC,SAASsG,SACVD,MAAL,YAAW,WAAX,cACRE,EAAaF,EAAQA,EAAMG,OAAOC,SAAW,EAC7CC,EAAW,UAAGxF,EAAMR,MAAT,UAAqB6F,GAMhCI,EAAsB,SAACC,EAAgBhH,GAC5B,MAAXA,EACFwG,EAAeQ,GACK,MAAXhH,GACLqG,GACFA,EAAWW,IAKjB,OACE,sBAAKtF,UAAWA,EAAhB,WACiB,IAAdwE,GACC,qBAAKxE,UAAU,OAAf,SACE,uBAAMA,UAAU,mBAAhB,yBACe,cAAC,EAAD,CAAaiC,KAAMwC,SAItC,sBAAKzE,UAAU,SAAf,UACE,qBAAKA,UAAU,GAAf,SACE,cAAC,EAAD,CAAaiC,KAAMrC,EAAMqC,SAE3B,sBAAKjC,UAAU,SAAf,UACE,gCACE,4BAAI,cAAC,EAAD,CAAaiC,KAAMrC,EAAMqC,KAAMG,iBAAiB,MACpD,4BAAIxC,EAAMyB,UAEV,cAACgD,EAAD,CAAazE,MAAOA,EAAO6E,UAAW7E,EAAMqC,UAE9C,sBAAKjC,UAAU,qBAAf,UACG6E,IAA+B,IAAhBH,GACd,eAAC,IAAMa,SAAP,WACE,cAAC7F,EAAD,CACEE,MAAOiF,EACP/E,iBAAkBuF,EAClBxF,OAAQ,CAAEO,KAAM,OAAQF,QAAS,WAEnC,cAACR,EAAD,CACEE,MAAOiF,EACP/E,iBAAkBuF,EAClBxF,OAAQ,CAAEO,KAAM,SAAUF,QAAS,YAErC,cAACR,EAAD,CACEE,MAAOiF,EACP/E,iBAAkBuF,EAClBxF,OAAQ,CAAEO,KAAM,UAAWF,QAAS,aAEtC,wBACEG,QAAS,kBAAMuE,EAAUhF,EAAMR,KAC/BY,UAAU,iCAFZ,wBAQU,IAAboF,EAAoB,KACnB,wBACEpF,UAAU,iCACVK,QA/DK,SAACC,GAClBA,EAAMC,iBACN9B,OAAOC,SAASC,KAAhB,WAA2BiB,EAAMR,KA2DvB,8BCpFP,SAASoG,EAAW7F,GACzB,IAAQ8F,EAAgC9F,EAAhC8F,cAAeC,EAAiB/F,EAAjB+F,aACvB,EAAkCjD,mBAChC9C,EAAMgG,UAAYhG,EAAMgG,UAAY,IADtC,mBAAOA,EAAP,KAAkBC,EAAlB,KAGA,EAAoCnD,mBAAS,IAA7C,mBAAOoD,EAAP,KAAmBC,EAAnB,KACA,EAA4BrD,mBAAS,IAArC,mBAAOsD,EAAP,KAAeC,EAAf,KACA,EAAwCvD,oBAAS,GAAjD,mBAAOwD,EAAP,KAAqBC,EAArB,KACA,EAA8BzD,mBAAS,MAAvC,mBAAOlD,EAAP,KAAgB4G,EAAhB,KAEAtD,qBAAU,WACJ8C,EAAU7H,OAAS6B,EAAMgG,UAAU7H,QACrC8H,EAAajG,EAAMgG,WAErB,IAAMS,EAAQ,YAAIT,GAAWU,OAAOR,GAChCO,EAAMtI,SAAWiI,EAAOjI,QAC1BkI,EAAUI,KAEX,CAACT,EAAWhG,EAAMgG,UAAWI,EAAQF,IAExChD,qBAAU,WACR,IAAqB,IAAjBoD,EAAwB,CAQ1B5G,EAAaM,EAAML,UAPW,SAACf,EAAUD,GACxB,MAAXA,IACFwH,EAAcvH,EAAS+H,SACvBH,EAAW5H,EAASgI,MACpBL,GAAgB,UAKrB,CAACL,EAAYI,EAAcC,EAAiBvG,EAAML,WAErD,IAAMkH,EAAmB,SAACC,GACxB,IAAIC,EAAa,YAAOf,GACxBe,EAAcC,QAAQF,GACtBb,EAAac,GACbjB,EAAcgB,IAGVG,EAAe,SAACjH,GAChBA,GACFR,EAAeQ,GAAO,SAACpB,EAAUD,GAC/B,GAAe,MAAXA,EAAgB,CAClBoH,EAAa/F,GACb,IAAIkH,EAAiBhB,EAAWiB,QAAO,SAAClH,GAAD,OAAWA,EAAMR,KAAOO,KAC/DmG,EAAce,GACd,IAAIE,EAAahB,EAAOe,QAAO,SAAClH,GAAD,OAAWA,EAAMR,KAAOO,KACvDqG,EAAUe,QAwBlB,OACE,qCACGhB,EAAOiB,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC3C,EAAD,CACE3E,MAAOqH,EACPtC,WAAY6B,EACZ5B,UAAWgC,EACX5G,UAAU,uCAJZ,UAKUkH,EALV,kBASH3H,GACC,wBACEc,QAAS,SAACvB,GAAD,OAjCM,SAACA,GACtBA,EAAEyB,iBACFlB,EACEM,EAAML,UACN,SAACf,EAAUD,GACT,GAAe,MAAXA,EAAgB,CAClB,IAAMqH,EAAY,YAAII,GAAQM,OAAO9H,EAAS+H,SAC9CR,EAAcH,GACdK,EAAUL,GACVQ,EAAW5H,EAASgI,WAEpBvF,MAAM,wBAGVzB,GAmBoB4H,CAAerI,IAC/BkB,UAAU,0BAFZ,0BCtFD,SAASoH,EAASzH,GACvB,IAAQ8F,EAAgC9F,EAAhC8F,cAAeC,EAAiB/F,EAAjB+F,aACvB,EAAkCjD,mBAChC9C,EAAMgG,UAAYhG,EAAMgG,UAAY,IADtC,mBAAOA,EAAP,KAAkBC,EAAlB,KAGA,EAAoCnD,mBAAS,IAA7C,mBAAOoD,EAAP,KAAmBC,EAAnB,KACA,EAA4BrD,mBAAS,IAArC,mBAAOsD,EAAP,KAAeC,EAAf,KACA,EAAwCvD,oBAAS,GAAjD,mBAAOwD,EAAP,KAAqBC,EAArB,KACA,EAA8BzD,mBAAS,MAAvC,mBAAOlD,EAAP,KAAgB4G,EAAhB,KACA,EAAkC1D,oBAAS,GAA3C,mBAAO4E,EAAP,KAAkBC,EAAlB,KAEAzE,qBAAU,WACJ8C,EAAU7H,OAAS6B,EAAMgG,UAAU7H,QACrC8H,EAAajG,EAAMgG,WAErB,IAAMS,EAAQ,YAAIT,GAAWU,OAAOR,GAChCO,EAAMtI,SAAWiI,EAAOjI,QAC1BkI,EAAUI,KAEX,CAACT,EAAWhG,EAAMgG,UAAWI,EAAQF,IAExChD,qBAAU,WACR,IAAqB,IAAjBoD,EAAwB,CAa1BrE,EAAejC,EAAML,UAZS,SAACf,EAAUD,GACxB,MAAXA,GACFgJ,GAAa,GAEA,MAAXhJ,IACsB,uBAApBC,EAASC,SACXsH,EAAcvH,EAAS+H,SACvBH,EAAW5H,EAASgI,OAEtBL,GAAgB,UAKrB,CAACL,EAAYI,EAAcC,EAAiBvG,EAAML,WAErD,IAAMkH,EAAmB,SAACC,GACxB,IAAIC,EAAa,YAAOf,GACxBe,EAAcC,QAAQF,GACtBb,EAAac,GACbjB,EAAcgB,IAGVG,EAAe,SAACjH,GAChBA,GACFR,EAAeQ,GAAO,SAACpB,EAAUD,GAC/B,GAAe,MAAXA,EAAgB,CAClBoH,EAAa/F,GACb,IAAIkH,EAAiBhB,EAAWiB,QAAO,SAAClH,GAAD,OAAWA,EAAMR,KAAOO,KAC/DmG,EAAce,GACd,IAAIE,EAAahB,EAAOe,QAAO,SAAClH,GAAD,OAAWA,EAAMR,KAAOO,KACvDqG,EAAUe,QAqBlB,OACE,qCACGM,GAAatB,EACZA,EAAOiB,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC3C,EAAD,CACEK,UAAWgC,EACXhH,MAAOqH,EACPtC,WAAY6B,EACZxG,UAAU,uCAJZ,UAKUkH,EALV,kBASFG,EACF,8BACE,oBAAIrH,UAAU,6BAAd,kCAGF,8BACE,oBAAIA,UAAU,6BAAd,8BAGHT,GACC,wBACEc,QAAS,SAACvB,GAAD,OAxCM,SAACA,GACtBA,EAAEyB,iBACFqB,EACEjC,EAAML,UACN,SAACf,EAAUD,GACT,GAAe,MAAXA,EAAgB,CAClB,IAAMqH,EAAY,YAAII,GAAQM,OAAO9H,EAAS+H,SAC9CR,EAAcH,GACdK,EAAUL,GACVQ,EAAW5H,EAASgI,SAGxBhH,GA4BoB4H,CAAerI,IAC/BkB,UAAU,0BAFZ,0BC/DD,SAASuH,EAAgB5H,GAC9B,MAAkC8C,mBAAS,IAA3C,mBAAOkD,EAAP,KAAkBC,EAAlB,KACM4B,EAA8B,UAAnB7H,EAAM6H,SAevB,OACE,sBAAKxH,UAAWL,EAAMK,UAAtB,UACE,cAAC,EAAD,eAAqBL,KACP,IAAb6H,GACC,cAAC9G,EAAD,CAAaI,SAlBI,SAAC2F,GACtB,IAAIC,EAAa,YAAOf,GACxBe,EAAcC,QAAQF,GACtBb,EAAac,IAe8B1G,UAAU,gBAEnD,cAACwF,EAAD,aACEC,cAhBgB,SAACgC,GACrB,IAAIf,EAAa,YAAOf,GACxBe,EAAcC,QAAQc,GACtB7B,EAAac,IAcThB,aAZe,SAACtG,GACpB,IAAIsH,EAAgBf,EAAUmB,QAAO,SAAClH,GAAD,OAAWA,EAAMR,KAAOA,KAC7DwG,EAAac,IAWTf,UAAWA,GACPhG,OAML,SAAS+H,EAAqB/H,GACnC,IAAQa,EAAYb,EAAZa,QACR,EAAkCiC,oBAAS,GAA3C,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAA0BnB,mBAAS,MAAnC,mBAAO7C,EAAP,KAAc+H,EAAd,KAEM3D,EAAsB,SAACzF,EAAUD,GACtB,MAAXA,EACFqJ,EAASpJ,GAETyC,MAAM,2CAUV,OAPA6B,qBAAU,YACU,IAAdc,KX9ED,SAAwBnD,EAAS3D,GACtCH,EAAc,MAAD,kBAAmB8D,EAAnB,KAA+B3D,GW8ExC+K,CAAepH,EAASwD,GACxBJ,GAAa,MAEd,CAACpD,EAASmD,EAAWC,IAEP,OAAVhE,EAAiB,KACtB,cAAC2E,EAAD,CAAO3E,MAAOA,EAAOI,UAAWL,EAAMK,YCpFtB6H,QACW,cAA7BpJ,OAAOC,SAASoJ,UAEe,UAA7BrJ,OAAOC,SAASoJ,UAEhBrJ,OAAOC,SAASoJ,SAAS/C,MACvB,2DCVN,IAAMjG,EAAI8B,IAAMmH,cAEVC,EAASvK,SAASwK,eAAe,QACnCD,GACFE,IAASC,OAAOrJ,EAAEyI,EAAiBS,EAAOI,SAAUJ,GAG1BvK,SAAS4K,iBAAiB,qBAElCC,SAAQ,SAACC,GAC3BL,IAASC,OAAOrJ,EAAE4I,EAAsBa,EAAUH,SAAUG,MAG9D,IAAMC,EAAS/K,SAASwK,eAAe,kBACnCO,GACFN,IAASC,OAAOrJ,GFdX,SAAuBa,GAC5B,MAAkC8C,mBAAS,IAA3C,mBAAOkD,EAAP,KAAkBC,EAAlB,KACM4B,EAA8B,UAAnB7H,EAAM6H,SAgBvB,OACE,sBAAKxH,UAAWL,EAAMK,UAAtB,UACE,cAAC,EAAD,eAAqBL,KACP,IAAb6H,GACC,cAAC9G,EAAD,CAAaI,SAnBI,SAAC2F,GACtB,IAAIC,EAAa,YAAOf,GACxBe,EAAcC,QAAQF,GACtBb,EAAac,IAgB8B1G,UAAU,gBAEnD,cAACoH,EAAD,aACEzB,UAAWA,EACXF,cAjBgB,SAACgC,GACrB,IAAIf,EAAa,YAAOf,GACxBe,EAAcC,QAAQc,GACtB7B,EAAac,IAeThB,aAbe,SAACtG,GACpB,IAAIsH,EAAgBf,EAAUmB,QAAO,SAAClH,GAAD,OAAWA,EAAMR,KAAOA,KAC7DwG,EAAac,KAYL/G,SEduB6I,EAAOJ,SAAUI,GAGvB/K,SAAS4K,iBACpC,4BAGmBC,SAAQ,SAACC,GAC5BL,IAASC,OAAOrJ,EAAE4E,EAAuB6E,EAAUH,SAAUG,MDoGzD,kBAAmBE,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.da7fcf08.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== \"\") {\n    var cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data);\n  }\n  const xhr = new XMLHttpRequest();\n  const url = `http://localhost:8000/api${endpoint}`;\n  xhr.responseType = \"json\";\n  const csrftoken = getCookie(\"csrftoken\");\n  xhr.open(method, url);\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n  if (csrftoken) {\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n  }\n\n  xhr.onload = function () {\n    if (xhr.status === 403) {\n      const detail = xhr.response.detail;\n      if (detail === \"Authentication credentials were not provided.\") {\n        if (window.location.href.indexOf(\"login\") === -1) {\n          //dont wanna ridirect when login already exists\n          window.location.href = \"/login?showLoginRequired=true\";\n        }\n      }\n    }\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({ message: \"The request was an error\" }, 400);\n  };\n  xhr.send(jsonData);\n}\n","import { backendLookup } from \"../lookup\";\n\nexport function apiTweetCreate(newTweet, callback) {\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n  const data = { id: tweetId, action: action };\n  backendLookup(\"POST\", \"/tweets/action/\", callback, data);\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n  let endpoint = \"/tweets/feed/\";\n  if (nextUrl !== undefined && nextUrl !== null) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n  }\n  backendLookup(\"GET\", endpoint, callback);\n}\n\nexport function apiTweetDelete(id, callback) {\n  let endpoint = `/tweets/${id}/delete/`;\n  backendLookup(\"DELETE\", endpoint, callback);\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n  let endpoint = \"/tweets/\";\n  if (username) {\n    endpoint = `/tweets/?username=${username}`;\n  }\n  if (nextUrl !== undefined && nextUrl !== null) {\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n  }\n  backendLookup(\"GET\", endpoint, callback);\n}\n","import React from 'react'\n\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleActionBackendEvent = (response, status) =>{\n      console.log(response, status)\n      if ((status === 200 || status === 201) && didPerformAction){\n        didPerformAction(response, status)\n      }\n    }\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n        \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  }","import React from \"react\";\nimport { apiTweetCreate } from \"./lookup\";\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef();\n  const { didTweet } = props;\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    // backend api request\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = \"\";\n  };\n  return (\n    <div className={props.className}>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          ref={textAreaRef}\n          required={true}\n          placeholder=\"Type your tweet content\"\n          className=\"form-control\"\n          name=\"tweet\"\n        ></textarea>\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\n          Tweet\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\nexport function SearchProfile(props) {\r\n  const textAreaRef = React.createRef();\r\n  const { newProfile } = props;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newVal = textAreaRef.current.value;\r\n    newProfile(newVal);\r\n    textAreaRef.current.value = \"\";\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      <form onSubmit={(e) => handleSubmit(e)} className=\"col-3 mx-auto\">\r\n        <textarea\r\n          ref={textAreaRef}\r\n          required={true}\r\n          className=\"form-control\"\r\n          name=\"tweet\"\r\n          placeholder=\"Search user by username\"\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n  let endpoint = `/profiles/${username}/`;\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport const apiProfileFollowToggle = (username, action, callback) => {\r\n  let endpoint = `/profiles/${username}/follow`;\r\n  const data = { action: `${action && action}`.toLowerCase() };\r\n  backendLookup(\"POST\", endpoint, callback, data);\r\n};\r\n\r\nexport function apiProfileFeed(username, callback, nextUrl) {\r\n  let endpoint = `/profiles/${username}/feed/`;\r\n  if (nextUrl !== undefined && nextUrl !== null) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { SearchProfile } from \"./search\";\r\nimport { apiProfileFeed } from \"./lookup\";\r\n\r\nconst UserLink = (props) => {\r\n  const { username } = props;\r\n  const handleUserLink = (e) => {\r\n    e.preventDefault();\r\n    window.location.href = `/profiles/${username}`;\r\n  };\r\n  return (\r\n    <span className=\"pointer\" onClick={(e) => handleUserLink(e)}>\r\n      {props.children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const UserPicture = (props) => {\r\n  const { user, hideLink } = props;\r\n  return (\r\n    <>\r\n      {hideLink ? (\r\n        <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n          {user.username[0]}\r\n        </span>\r\n      ) : (\r\n        <UserLink username={user.username}>\r\n          <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n            {user.username[0]}\r\n          </span>\r\n        </UserLink>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport const UserDisplay = (props) => {\r\n  const { user, includeFullName, hideLink } = props;\r\n  const nameDisplay = includeFullName\r\n    ? `${user.first_name} ${user.last_name} `\r\n    : null;\r\n\r\n  return (\r\n    <>\r\n      {nameDisplay}\r\n      {hideLink ? (\r\n        `@${user.username}`\r\n      ) : (\r\n        <UserLink username={user.username}>\r\n          <span>@{user.username}</span>\r\n        </UserLink>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// export function SearchComponent(props) {\r\n//   const [username, setUsername] = useState(null);\r\n//   const [didSearch, setDidSearch] = useState(false);\r\n//   const [tweetsInit, setTweetsInit] = useState([]);\r\n//   const [tweets, setTweets] = useState([]);\r\n//   const [nextUrl, setNextUrl] = useState(null);\r\n\r\n//   const handleNewProfile = (name) => {\r\n//     setUsername(name);\r\n//     setDidSearch(true);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (tweetsInit.length !== tweets.length) {\r\n//       setTweets(tweetsInit);\r\n//     }\r\n//   }, [tweets, tweetsInit]);\r\n\r\n//   useEffect(() => {\r\n//     if (didSearch) {\r\n//       const handleTweetListLookup = (response, status) => {\r\n//         if (status === 200) {\r\n//           console.log(response);\r\n//           setTweetsInit(response.results);\r\n//           setNextUrl(response.next);\r\n//         } else if (status === 404) {\r\n//           console.log(response);\r\n//         }\r\n//       };\r\n//       apiProfileFeed(username, handleTweetListLookup);\r\n//     }\r\n//   }, [username]);\r\n\r\n//   const handleLoadNext = (e) => {\r\n//     e.preventDefault();\r\n//     apiProfileFeed(\r\n//       username,\r\n//       (response, status) => {\r\n//         if (status === 200) {\r\n//           const newTweets = [...tweets].concat(response.results);\r\n//           setTweetsInit(newTweets);\r\n//           setTweets(newTweets);\r\n//           setNextUrl(response.next);\r\n//         }\r\n//       },\r\n//       nextUrl\r\n//     );\r\n//   };\r\n\r\n//   return didSearch ? (\r\n//     <div className={props.className}>\r\n//       <SearchProfile newProfile={handleNewProfile} className=\"col-12 mb-3\" />\r\n//       {username ? (\r\n//         <>\r\n//           <ProfileBadgeComponent username={username} />\r\n//           {tweets !== null\r\n//             ? tweets.map((item, index) => {\r\n//                 return (\r\n//                   <Tweet\r\n//                     tweet={item}\r\n//                     className=\"my-5 py-5 border bg-white text-dark\"\r\n//                     key={`${index}-{item.id}`}\r\n//                   />\r\n//                 );\r\n//               })\r\n//             : null}\r\n//           {nextUrl && (\r\n//             <button\r\n//               onClick={(e) => handleLoadNext(e)}\r\n//               className=\"btn btn-outline-primary\"\r\n//             >\r\n//               Load Next\r\n//             </button>\r\n//           )}\r\n//         </>\r\n//       ) : (\r\n//         <h1>User not found</h1>\r\n//       )}\r\n//     </div>\r\n//   ) : (\r\n//     <SearchProfile newProfile={handleNewProfile} className=\"col-12 mb-3\" />\r\n//   );\r\n// }\r\nexport const SearchComponent = (props) => {\r\n  const [username, setUsername] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  const handleNewProfile = (name) => {\r\n    setUsername(name);\r\n  };\r\n  useEffect(() => {\r\n    if (username) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          setSuccess(true);\r\n          window.location.href = `/profiles/${username}`;\r\n        } else if (status === 404) {\r\n          setSuccess(false);\r\n        }\r\n      };\r\n      apiProfileFeed(username, handleTweetListLookup);\r\n    }\r\n  }, [username]);\r\n  return (\r\n    <>\r\n      <SearchProfile newProfile={handleNewProfile} />\r\n      {success === false ? (\r\n        <div>\r\n          <h1 className=\"mx-auto text-uppercase\">\r\n            User not found, search again\r\n          </h1>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import numeral from \"numeral\";\r\n\r\nexport const DisplayCount = (props) => {\r\n  return (\r\n    <span className={props.className}>\r\n      {numeral(props.children).format(\"0a\")}\r\n    </span>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { apiProfileDetail } from \"./lookup\";\r\nimport { UserDisplay, UserPicture } from \"./components\";\r\nimport { apiProfileFollowToggle } from \"./lookup\";\r\nimport { DisplayCount } from \"./utils\";\r\n\r\nconst ProfileBadge = (props) => {\r\n  const { user, didFollowToggle, profileLoading } = props;\r\n  let currentVerb = user && user.is_following ? \"Unfollow\" : \"Follow\";\r\n  currentVerb = profileLoading ? \"Loading...\" : currentVerb;\r\n\r\n  const handleFollowToggle = (e) => {\r\n    e.preventDefault();\r\n    if (didFollowToggle && !profileLoading) {\r\n      didFollowToggle(currentVerb);\r\n    }\r\n  };\r\n  return user ? (\r\n    <div className=\"p-2\">\r\n      <div className=\"mb-2\">\r\n        <UserPicture user={user} hideLink={true} />\r\n      </div>\r\n      <p>\r\n        <UserDisplay user={user} includeFullName={true} hideLink={true} />\r\n      </p>\r\n      <p>\r\n        <DisplayCount>{user.followers_count}</DisplayCount>\r\n        {user.followers_count === 1 ? \" follower\" : \" followers\"}\r\n      </p>\r\n      <p>\r\n        <DisplayCount>{user.following_count}</DisplayCount> following\r\n      </p>\r\n      <p>{user.location}</p>\r\n      <p>{user.bio}</p>\r\n\r\n      <button\r\n        onClick={(e) => handleFollowToggle(e)}\r\n        className=\"btn btn-primary\"\r\n      >\r\n        {currentVerb}\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n  const { username } = props;\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [profile, setProfile] = useState(null);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setProfile(response);\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiProfileDetail(username, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }, [username, didLookup, setDidLookup]);\r\n\r\n  const handleNewFollow = (actionVerb) => {\r\n    setProfileLoading(true);\r\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n      // console.log(response, status);\r\n      if (status === 200) {\r\n        setProfile(response);\r\n        // apiProfileDetail(username, handleBackendLookup) // does the same thing but two lookups\r\n      }\r\n      setProfileLoading(false);\r\n    });\r\n  };\r\n\r\n  return profile === null ? null : (\r\n    <ProfileBadge\r\n      user={profile}\r\n      didFollowToggle={handleNewFollow}\r\n      profileLoading={profileLoading}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { ActionBtn } from \"./buttons\";\nimport { UserPicture, UserDisplay } from \"../profiles\";\n\nexport function ParentTweet(props) {\n  const { tweet } = props;\n  return tweet.parent ? (\n    <Tweet\n      isRetweet\n      retweeter={props.retweeter}\n      hideActions\n      className={\" \"}\n      tweet={tweet.parent}\n    />\n  ) : null;\n}\nexport function Tweet(props) {\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter, didDelete } =\n    props;\n  const [actionTweet, setActionTweet] = useState(\n    props.tweet ? props.tweet : null\n  );\n  let className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\n  className =\n    isRetweet === true ? `${className} p-2 border rounded` : className;\n  const path = window.location.pathname;\n  const match = path.match(/(?<tweetid>\\d+)/);\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = (event) => {\n    event.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return (\n    <div className={className}>\n      {isRetweet === true && (\n        <div className=\"mb-2\">\n          <span className=\"small text-muted\">\n            Retweet via {<UserDisplay user={retweeter} />}\n          </span>\n        </div>\n      )}\n      <div className=\"d-flex\">\n        <div className=\"\">\n          <UserPicture user={tweet.user} />\n        </div>\n        <div className=\"col-11\">\n          <div>\n            <p>{<UserDisplay user={tweet.user} includeFullName={true} />}</p>\n            <p>{tweet.content}</p>\n\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\n          </div>\n          <div className=\"btn btn-group px-0\">\n            {actionTweet && hideActions !== true && (\n              <React.Fragment>\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"like\", display: \"Likes\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\n                />\n                <ActionBtn\n                  tweet={actionTweet}\n                  didPerformAction={handlePerformAction}\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\n                />\n                <button\n                  onClick={() => didDelete(tweet.id)}\n                  className=\"btn btn-outline-primary btn-sm\"\n                >\n                  Delete\n                </button>\n              </React.Fragment>\n            )}\n            {isDetail === true ? null : (\n              <button\n                className=\"btn btn-outline-primary btn-sm\"\n                onClick={handleLink}\n              >\n                View\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { apiTweetList } from \"./lookup\";\n\nimport { Tweet } from \"./detail\";\nimport { apiTweetDelete } from \"./lookup\";\n\nexport function TweetsList(props) {\n  const { fixingRetweet, fixingDelete } = props;\n  const [newTweets, setNewTweets] = useState(\n    props.newTweets ? props.newTweets : []\n  );\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  const [nextUrl, setNextUrl] = useState(null);\n\n  useEffect(() => {\n    if (newTweets.length < props.newTweets.length) {\n      setNewTweets(props.newTweets);\n    }\n    const final = [...newTweets].concat(tweetsInit);\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [newTweets, props.newTweets, tweets, tweetsInit]);\n\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response.results);\n          setNextUrl(response.next);\n          setTweetsDidSet(true);\n        }\n      };\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n    fixingRetweet(newTweet);\n  };\n\n  const handleDelete = (props) => {\n    if (props) {\n      apiTweetDelete(props, (response, status) => {\n        if (status === 204) {\n          fixingDelete(props);\n          let tempTweetsInit = tweetsInit.filter((tweet) => tweet.id !== props);\n          setTweetsInit(tempTweetsInit);\n          let tempTweets = tweets.filter((tweet) => tweet.id !== props);\n          setTweets(tempTweets);\n        }\n      });\n    }\n  };\n\n  const handleLoadNext = (e) => {\n    e.preventDefault();\n    apiTweetList(\n      props.username,\n      (response, status) => {\n        if (status === 200) {\n          const newTweets = [...tweets].concat(response.results);\n          setTweetsInit(newTweets);\n          setTweets(newTweets);\n          setNextUrl(response.next);\n        } else {\n          alert(\"There was an error\");\n        }\n      },\n      nextUrl\n    );\n  };\n\n  return (\n    <>\n      {tweets.map((item, index) => {\n        return (\n          <Tweet\n            tweet={item}\n            didRetweet={handleDidRetweet}\n            didDelete={handleDelete}\n            className=\"my-5 py-5 border bg-white text-dark\"\n            key={`${index}-{item.id}`}\n          />\n        );\n      })}\n      {nextUrl && (\n        <button\n          onClick={(e) => handleLoadNext(e)}\n          className=\"btn btn-outline-primary\"\n        >\n          Load Next\n        </button>\n      )}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { apiProfileFeed } from \"../profiles/lookup\";\r\n\r\nimport { Tweet } from \"./detail\";\r\nimport { apiTweetDelete } from \"./lookup\";\r\n\r\nexport function FeedList(props) {\r\n  const { fixingRetweet, fixingDelete } = props;\r\n  const [newTweets, setNewTweets] = useState(\r\n    props.newTweets ? props.newTweets : []\r\n  );\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [userFound, setUserFound] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (newTweets.length < props.newTweets.length) {\r\n      setNewTweets(props.newTweets);\r\n    }\r\n    const final = [...newTweets].concat(tweetsInit);\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [newTweets, props.newTweets, tweets, tweetsInit]);\r\n\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 404) {\r\n          setUserFound(false);\r\n        }\r\n        if (status === 200) {\r\n          if (response.detail !== \"user has no tweets\") {\r\n            setTweetsInit(response.results);\r\n            setNextUrl(response.next);\r\n          }\r\n          setTweetsDidSet(true);\r\n        }\r\n      };\r\n      apiProfileFeed(props.username, handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n    fixingRetweet(newTweet);\r\n  };\r\n\r\n  const handleDelete = (props) => {\r\n    if (props) {\r\n      apiTweetDelete(props, (response, status) => {\r\n        if (status === 204) {\r\n          fixingDelete(props);\r\n          let tempTweetsInit = tweetsInit.filter((tweet) => tweet.id !== props);\r\n          setTweetsInit(tempTweetsInit);\r\n          let tempTweets = tweets.filter((tweet) => tweet.id !== props);\r\n          setTweets(tempTweets);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleLoadNext = (e) => {\r\n    e.preventDefault();\r\n    apiProfileFeed(\r\n      props.username,\r\n      (response, status) => {\r\n        if (status === 200) {\r\n          const newTweets = [...tweets].concat(response.results);\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n          setNextUrl(response.next);\r\n        }\r\n      },\r\n      nextUrl\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {userFound && tweets ? (\r\n        tweets.map((item, index) => {\r\n          return (\r\n            <Tweet\r\n              didDelete={handleDelete}\r\n              tweet={item}\r\n              didRetweet={handleDidRetweet}\r\n              className=\"my-5 py-5 border bg-white text-dark\"\r\n              key={`${index}-{item.id}`}\r\n            />\r\n          );\r\n        })\r\n      ) : userFound ? (\r\n        <div>\r\n          <h1 className=\"text-center text-uppercase\">User has no Tweets</h1>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h1 className=\"text-center text-uppercase\">User not found</h1>\r\n        </div>\r\n      )}\r\n      {nextUrl && (\r\n        <button\r\n          onClick={(e) => handleLoadNext(e)}\r\n          className=\"btn btn-outline-primary\"\r\n        >\r\n          Load Next\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\n\nimport { TweetCreate } from \"./create\";\nimport { Tweet } from \"./detail\";\nimport { apiTweetDetail } from \"./lookup\";\nimport { TweetsList } from \"./list\";\nimport { FeedList } from \"./feed\";\nimport { SearchComponent } from \"../profiles\";\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n    // console.log(newTweet, newTweets);\n  };\n  const fixingRetweet = (retweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(retweet);\n    setNewTweets(tempNewTweets);\n  };\n  const fixingDelete = (id) => {\n    let tempNewTweets = newTweets.filter((tweet) => tweet.id !== id);\n    setNewTweets(tempNewTweets);\n  };\n  return (\n    <div className={props.className}>\n      <SearchComponent {...props} />\n      {canTweet === true && (\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\n      )}\n      <FeedList\n        newTweets={newTweets}\n        fixingRetweet={fixingRetweet}\n        fixingDelete={fixingDelete}\n        {...props}\n      />\n    </div>\n  );\n}\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n  const fixingRetweet = (retweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(retweet);\n    setNewTweets(tempNewTweets);\n  };\n  const fixingDelete = (id) => {\n    let tempNewTweets = newTweets.filter((tweet) => tweet.id !== id);\n    setNewTweets(tempNewTweets);\n  };\n  return (\n    <div className={props.className}>\n      <SearchComponent {...props} />\n      {canTweet === true && (\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\n      )}\n      <TweetsList\n        fixingRetweet={fixingRetweet}\n        fixingDelete={fixingDelete}\n        newTweets={newTweets}\n        {...props}\n      />\n    </div>\n  );\n}\n\nexport function TweetDetailComponent(props) {\n  const { tweetId } = props;\n  const [didLookup, setDidLookup] = useState(false);\n  const [tweet, setTweet] = useState(null);\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response);\n    } else {\n      alert(\"There was an error finding your tweet.\");\n    }\n  };\n  useEffect(() => {\n    if (didLookup === false) {\n      apiTweetDetail(tweetId, handleBackendLookup);\n      setDidLookup(true);\n    }\n  }, [tweetId, didLookup, setDidLookup]);\n\n  return tweet === null ? null : (\n    <Tweet tweet={tweet} className={props.className} />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { TweetsComponent, TweetDetailComponent, FeedComponent } from \"./tweets\";\nimport { ProfileBadgeComponent } from \"./profiles\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst e = React.createElement;\n\nconst rootEl = document.getElementById(\"root\");\nif (rootEl) {\n  ReactDOM.render(e(TweetsComponent, rootEl.dataset), rootEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\n\ntweetDetailElements.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\nconst feedEl = document.getElementById(\"tweetme-2-feed\");\nif (feedEl) {\n  ReactDOM.render(e(FeedComponent, feedEl.dataset), feedEl);\n}\n\nconst profileBadgeElements = document.querySelectorAll(\n  \".tweetme-2-profile-badge\"\n);\n\nprofileBadgeElements.forEach((container) => {\n  ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}